name: Spring Boot CI

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build-test-and-analyze:
    name: Build, Test and Analyze
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: maven
      - name: Cache SonarQube packages
        uses: actions/cache@v3
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Build, Test and Analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
          SPRING_APPLICATION_NAME: ${{ secrets.SPRING_APPLICATION_NAME }}
          PASSWORD_ADMIN: ${{ secrets.PASSWORD_ADMIN }}
          API_HOST: ${{ secrets.API_HOST }}
          API_FRONT: ${{ secrets.API_FRONT }}
          SPRING_DATASOURCE_URL: ${{ secrets.SPRING_DATASOURCE_URL }}
          SPRING_DATASOURCE_USERNAME: ${{ secrets.SPRING_DATASOURCE_USERNAME }}
          SPRING_DATASOURCE_PASSWORD: ${{ secrets.SPRING_DATASOURCE_PASSWORD }}
          SPRING_DATASOURCE_DRIVER_CLASS_NAME: ${{ secrets.SPRING_DATASOURCE_DRIVER_CLASS_NAME }}
          SPRING_JPA_HIBERNATE_DDL_AUTO: ${{ secrets.SPRING_JPA_HIBERNATE_DDL_AUTO }}
          SPRING_JPA_PROPERTIES_HIBERNATE_FORMAT_SQL: ${{ secrets.SPRING_JPA_PROPERTIES_HIBERNATE_FORMAT_SQL }}
          SPRING_JPA_SHOW_SQL: ${{ secrets.SPRING_JPA_SHOW_SQL }}
          SPRING_JPA_PROPERTIES_HIBERNATE_DIALECT: ${{ secrets.SPRING_JPA_PROPERTIES_HIBERNATE_DIALECT }}
          SPRING_JPA_DATABASE_PLATFORM: ${{ secrets.SPRING_JPA_DATABASE_PLATFORM }}
          SPRING_JACKSON_SERIALIZATION_WRITE_DATES_AS_TIMESTAMPS: ${{ secrets.SPRING_JACKSON_SERIALIZATION_WRITE_DATES_AS_TIMESTAMPS }}
          SPRING_JACKSON_DATE_FORMAT: ${{ secrets.SPRING_JACKSON_DATE_FORMAT }}
          APP_SECURITY_JWT_SECRET: ${{ secrets.APP_SECURITY_JWT_SECRET }}
          APP_SECURITY_JWT_EXPIRATION_HOURS: ${{ secrets.APP_SECURITY_JWT_EXPIRATION_HOURS }}
          APPLICATION_JSON: ${{ secrets.APPLICATION_JSON }}
          CHARACTER_ENCONDIG: ${{ secrets.CHARACTER_ENCONDIG }}
          R2_BUCKET_PATH: ${{ secrets.R2_BUCKET_PATH }}
          R2_BUCKET_NAME: ${{ secrets.R2_BUCKET_NAME }}
          R2_BUCKET_ACCESS_KEY: ${{ secrets.R2_BUCKET_ACCESS_KEY }}
          R2_BUCKET_SECRET_KEY: ${{ secrets.R2_BUCKET_SECRET_KEY }}
          R2_BUCKET_REGION: ${{ secrets.R2_BUCKET_REGION }}
          R2_ACCOUNT_ID: ${{ secrets.R2_ACCOUNT_ID }}
          CRON_DETERMINATION: ${{ secrets.CRON_DETERMINATION }}
          CRON_SECONDS: ${{ secrets.CRON_SECONDS }}
          CRON_THIRTY_SECONDS: ${{ secrets.CRON_THIRTY_SECONDS }}
          CRON_EVERY_MONDAY: ${{ secrets.CRON_EVERY_MONDAY }}
          CRON_EVERY_JANURY: ${{ secrets.CRON_EVERY_JANURY }}
          CRON_EVERY_FIRST_DAY_JANURY: ${{ secrets.CRON_EVERY_FIRST_DAY_JANURY }}
          SPRING_SECURITY_USER_NAME: ${{ secrets.SPRING_SECURITY_USER_NAME }}
          SPRING_SECURITY_USER_PASSWORD: ${{ secrets.SPRING_SECURITY_USER_PASSWORD }}
          RABBITMQ_URL: ${{ secrets.RABBITMQ_URL }}
          QUEUE_NAME: ${{ secrets.QUEUE_NAME }}
          TYPE_MESSAGE: ${{ secrets.TYPE_MESSAGE }}
          QUEUE_FINAL_NAME: ${{ secrets.QUEUE_FINAL_NAME }}
          APP_SUBJECT: ${{ secrets.APP_SUBJECT }}
          SPRING_MVC_CONTENTNEGOTIATION_MEDIA_TYPES_PDF: ${{ secrets.SPRING_MVC_CONTENTNEGOTIATION_MEDIA_TYPES_PDF }}
          SPRING_MVC_CONTENTNEGOTIATION_MEDIA_TYPES_DOCX: ${{ secrets.SPRING_MVC_CONTENTNEGOTIATION_MEDIA_TYPES_DOCX }}
          SPRING_MVC_CONTENTNEGOTIATION_MEDIA_TYPES_XLSX: ${{ secrets.SPRING_MVC_CONTENTNEGOTIATION_MEDIA_TYPES_XLSX }}
          SPRING_MVC_CONTENTNEGOTIATION_MEDIA_TYPES_JPEG: ${{ secrets.SPRING_MVC_CONTENTNEGOTIATION_MEDIA_TYPES_JPEG }}
          SPRING_MVC_CONTENTNEGOTIATION_MEDIA_TYPES_PNG: ${{ secrets.SPRING_MVC_CONTENTNEGOTIATION_MEDIA_TYPES_PNG }}
          SPRING_MVC_CONTENTNEGOTIATION_MEDIA_TYPES_GIF: ${{ secrets.SPRING_MVC_CONTENTNEGOTIATION_MEDIA_TYPES_GIF }}
          SPRING_MVC_CONTENTNEGOTIATION_MEDIA_TYPES_TXT: ${{ secrets.SPRING_MVC_CONTENTNEGOTIATION_MEDIA_TYPES_TXT }}
          SPRING_MVC_CONTENTNEGOTIATION_MEDIA_TYPES_HTML: ${{ secrets.SPRING_MVC_CONTENTNEGOTIATION_MEDIA_TYPES_HTML }}
          SPRING_MVC_CONTENTNEGOTIATION_MEDIA_TYPES_CSS: ${{ secrets.SPRING_MVC_CONTENTNEGOTIATION_MEDIA_TYPES_CSS }}
          SPRING_MVC_CONTENTNEGOTIATION_MEDIA_TYPES_MP3: ${{ secrets.SPRING_MVC_CONTENTNEGOTIATION_MEDIA_TYPES_MP3 }}
          SPRING_MVC_CONTENTNEGOTIATION_MEDIA_TYPES_MP4: ${{ secrets.SPRING_MVC_CONTENTNEGOTIATION_MEDIA_TYPES_MP4 }}
          SPRING_MVC_CONTENTNEGOTIATION_MEDIA_TYPES_JSON: ${{ secrets.SPRING_MVC_CONTENTNEGOTIATION_MEDIA_TYPES_JSON }}
          SPRING_MVC_CONTENTNEGOTIATION_MEDIA_TYPES_XML: ${{ secrets.SPRING_MVC_CONTENTNEGOTIATION_MEDIA_TYPES_XML }}
          LOGGING_LEVEL_ROOT: ${{ secrets.LOGGING_LEVEL_ROOT }}
        run: mvn -B verify sonar:sonar -Dsonar.projectKey=${{ secrets.SONAR_PROJECT_KEY }} -Dsonar.organization=${{ secrets.SONAR_ORGANIZATION }}
