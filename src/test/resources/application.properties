# Spring Application Configuration
spring.application.name=spring-boot

# Database Configuration
spring.datasource.url=${DATABASE_URL:jdbc:postgresql://localhost:5433/parking_db}
spring.datasource.username=${DATABASE_USERNAME:postgres}
spring.datasource.password=${DATABASE_PASSWORD:admin}
spring.datasource.driver-class-name=org.postgresql.Driver

# JPA Configuration
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.format_sql=true

# JWT Security Configuration
app.security.jwt.secret=${JWT_SECRET:your-very-long-secret-key-that-should-be-at-least-32-characters-long}
app.security.jwt.expiration-hours=6

# Application configuration
application.json=application/json
character.encoding=UTF-8

# Server Configuration
server.port=${SERVER_PORT:8080}

# Logging Configuration
logging.level.root=INFO

# SpringDoc OpenAPI Configuration
springdoc.api-docs.path=/api-docs
springdoc.swagger-ui.path=/swagger-ui.html
springdoc.swagger-ui.operationsSorter=method

# RabbitMQ Configuration (if needed)
spring.rabbitmq.host=${RABBITMQ_HOST:localhost}
spring.rabbitmq.port=${RABBITMQ_PORT:5672}
spring.rabbitmq.username=${RABBITMQ_USERNAME:guest}
spring.rabbitmq.password=${RABBITMQ_PASSWORD:guest}

# AWS S3 Configuration (if needed)
aws.region=${AWS_REGION:us-east-1}
aws.s3.bucket=${AWS_S3_BUCKET:your-bucket-name}
aws.access.key.id=${AWS_ACCESS_KEY_ID:}
aws.secret.access.key=${AWS_SECRET_ACCESS_KEY:}